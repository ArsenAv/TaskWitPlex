{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { FETCH_POSTS } from './actions';\nimport axios from 'axios';\nimport { fetchData } from './actions';\nlet gotRes = null;\nconst initialState = {\n  books: [],\n  gotResponse: false\n};\n\nconst booksReducer = async (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_POSTS:\n      {\n        const response = await axios.get(action.payload).then(res => {\n          gotRes = res;\n        });\n        return { ...state,\n          books: gotRes.data,\n          gotResponse: true\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport const postsReducer = combineReducers({\n  allbooks: booksReducer\n});","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/redux/reducers.js"],"names":["combineReducers","FETCH_POSTS","axios","fetchData","gotRes","initialState","books","gotResponse","booksReducer","state","action","type","response","get","payload","then","res","data","postsReducer","allbooks"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAAyB,WAAzB;AAGA,IAAIC,MAAM,GAAE,IAAZ;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAIjBC,EAAAA,WAAW,EAAC;AAJK,CAArB;;AAOA,MAAMC,YAAY,GAAG,OAAOC,KAAK,GAAGJ,YAAf,EAA6BK,MAA7B,KAAwC;AACzD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKV,WAAL;AAAiB;AACb,cAAMW,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUH,MAAM,CAACI,OAAjB,EAA0BC,IAA1B,CAAgCC,GAAD,IAAO;AACzDZ,UAAAA,MAAM,GAAIY,GAAV;AAEH,SAHsB,CAAvB;AAIA,eAAO,EAAC,GAAGP,KAAJ;AAAWH,UAAAA,KAAK,EAAEF,MAAM,CAACa,IAAzB;AAA8BV,UAAAA,WAAW,EAAC;AAA1C,SAAP;AAEH;;AACD;AAAS;AACL,eAAOE,KAAP;AACH;AAZL;AAcH,CAfD;;AAmBA,OAAO,MAAMS,YAAY,GAAGlB,eAAe,CAAC;AAACmB,EAAAA,QAAQ,EAAEX;AAAX,CAAD,CAApC","sourcesContent":["import {combineReducers} from 'redux';\r\nimport { FETCH_POSTS } from './actions';\r\nimport axios from 'axios'\r\nimport { fetchData} from './actions';\r\n\r\n\r\nlet gotRes =null;\r\n\r\nconst initialState = {\r\n    books: [\r\n       \r\n    ],\r\n    gotResponse:false\r\n}\r\n\r\nconst booksReducer = async (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case FETCH_POSTS:{\r\n            const response = await axios.get(action.payload).then((res)=>{\r\n                gotRes  = res;\r\n\r\n            })\r\n            return {...state, books: gotRes.data,gotResponse:true}\r\n            \r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const postsReducer = combineReducers({allbooks: booksReducer});"]},"metadata":{},"sourceType":"module"}