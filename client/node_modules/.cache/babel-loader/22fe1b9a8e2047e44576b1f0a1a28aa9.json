{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { FETCH_POSTS, CHANGE_BOOKS } from './actions';\n\nconst axios = require('axios');\n\nconst initialState = {\n  books: []\n};\n\nconst booksReducer = async (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_POSTS:\n      {\n        const response = await axios.get(action.payload); // return [ action.payload.data, ...state ]\n\n        alert(\"response: \" + JSON.stringify(response));\n        return [{\n          books: response.data\n        }, ...state];\n      }\n\n    case CHANGE_BOOKS:\n      {\n        alert(JSON.stringify(action.payload));\n        return state;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport const postsReducer = combineReducers({\n  allbooks: booksReducer\n});","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/redux/reducers.js"],"names":["combineReducers","FETCH_POSTS","CHANGE_BOOKS","axios","require","initialState","books","booksReducer","state","action","type","response","get","payload","alert","JSON","stringify","data","postsReducer","allbooks"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,WAA1C;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAIA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAMA,MAAMC,YAAY,GAAG,OAAOC,KAAK,GAAGH,YAAf,EAA6BI,MAA7B,KAAwC;AACzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,WAAL;AAAiB;AACb,cAAMU,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUH,MAAM,CAACI,OAAjB,CAAvB,CADa,CAEb;;AACAC,QAAAA,KAAK,CAAC,eAAeC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAhB,CAAL;AACA,eAAO,CAAC;AAACL,UAAAA,KAAK,EAAEK,QAAQ,CAACM;AAAjB,SAAD,EAAwB,GAAGT,KAA3B,CAAP;AAEH;;AACD,SAAKN,YAAL;AAAkB;AACdY,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAM,CAACI,OAAtB,CAAD,CAAL;AACA,eAAOL,KAAP;AACH;;AACD;AAAS;AACL,eAAOA,KAAP;AACH;AAdL;AAgBH,CAjBD;;AAqBA,OAAO,MAAMU,YAAY,GAAGlB,eAAe,CAAC;AAACmB,EAAAA,QAAQ,EAAEZ;AAAX,CAAD,CAApC","sourcesContent":["import {combineReducers} from 'redux';\r\nimport { FETCH_POSTS, CHANGE_BOOKS } from './actions';\r\nconst axios = require('axios')\r\n\r\n\r\n\r\nconst initialState = {\r\n    books: [\r\n       \r\n    ]\r\n}\r\n\r\nconst booksReducer = async (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FETCH_POSTS:{\r\n            const response = await axios.get(action.payload);\r\n            // return [ action.payload.data, ...state ]\r\n            alert(\"response: \" + JSON.stringify(response))\r\n            return [{books: response.data},...state ];\r\n           \r\n        }\r\n        case CHANGE_BOOKS:{\r\n            alert(JSON.stringify(action.payload))\r\n            return state;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const postsReducer = combineReducers({allbooks: booksReducer});"]},"metadata":{},"sourceType":"module"}