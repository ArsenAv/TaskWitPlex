{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'Get', body = 'null', headers = {}) => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Problems, Retry');\n      }\n\n      setLoading(false);\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n\n  const clearError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"MstwQpYZpw83DP6eQvw4fjC0Jxg=\");","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","response","fetch","data","json","ok","Error","message","e","clearError"],"mappings":";;AACA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,OAAO,GAAGN,WAAW,CAAC,OAAOO,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,MAAnC,EAA2CC,OAAO,GAAG,EAArD,KAA2D;AACjFP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACJ,QAAG;AACA,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAAN,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAG,CAACH,QAAQ,CAACI,EAAb,EAAgB;AACZ,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,iBAA1B,CAAN;AACH;;AACCd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACJ,KAPD,CAOE,OAAMe,CAAN,EAAQ;AACLf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACa,CAAC,CAACD,OAAH,CAAR;AACA,YAAMC,CAAN;AACJ;AACC,GAduB,EAcrB,EAdqB,CAA3B;;AAeG,QAAMC,UAAU,GAAG,MAAMd,QAAQ,CAAC,IAAD,CAAjC;;AACH,SAAO;AAACH,IAAAA,OAAD;AAAUI,IAAAA,OAAV;AAAmBF,IAAAA,KAAnB;AAA0Be,IAAAA;AAA1B,GAAP;AACD,CArBM;;GAAMlB,O","sourcesContent":["\r\nimport {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'Get', body = 'null', headers = {}) =>{\r\n        setLoading(true);\r\n    try{\r\n       const response = await fetch(url, {method, body, headers})\r\n       const data = await response.json()\r\n       if(!response.ok){\r\n           throw new Error(data.message || 'Problems, Retry')\r\n       }\r\n         setLoading(false);\r\n    } catch(e){\r\n         setLoading(false);\r\n         setError(e.message);\r\n         throw e\r\n    }\r\n     }, []);\r\n     const clearError = () => setError(null)\r\n  return {loading, request, error, clearError};\r\n}"]},"metadata":{},"sourceType":"module"}