{"ast":null,"code":"import { combineReducers } from 'redux';\nconst initialState = {\n  books: [{\n    title: \"The Book\",\n    autor: \"Miki Rurk\",\n    discription: \"Lorem Ispum\"\n  }]\n};\n\nconst booksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_LIST:\n      {\n        for (let i = state.posts.length - 1; i >= 0; i--) {\n          if (state.posts[i].used === false) {\n            let posts = [...state.posts];\n            posts[i].used = true;\n            return {\n              posts: posts\n            };\n          }\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const postsReducer = combineReducers({\n  list: booksReducer\n});","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/redux/reducers.js"],"names":["combineReducers","initialState","books","title","autor","discription","booksReducer","state","action","type","ADD_TO_LIST","i","posts","length","used","postsReducer","list"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACJ;AAACC,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,KAAK,EAAE,WAA3B;AAAwCC,IAAAA,WAAW,EAAE;AAArD,GADI;AADU,CAArB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKC,WAAL;AAAkB;AACd,aAAI,IAAIC,CAAC,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,GAAqB,CAAjC,EAAoCF,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAgD;AAC5C,cAAGJ,KAAK,CAACK,KAAN,CAAYD,CAAZ,EAAeG,IAAf,KAAwB,KAA3B,EAAiC;AAC7B,gBAAIF,KAAK,GAAG,CAAC,GAAGL,KAAK,CAACK,KAAV,CAAZ;AACAA,YAAAA,KAAK,CAACD,CAAD,CAAL,CAASG,IAAT,GAAgB,IAAhB;AACA,mBAAO;AAACF,cAAAA,KAAK,EAAEA;AAAR,aAAP;AACH;AACJ;;AACD,eAAOL,KAAP;AACH;;AACD;AACI,aAAOA,KAAP;AAZR;AAcH,CAfD;;AAmBA,OAAO,MAAMQ,YAAY,GAAGf,eAAe,CAAC;AAACgB,EAAAA,IAAI,EAAEV;AAAP,CAAD,CAApC","sourcesContent":["import {combineReducers} from 'redux';\r\n\r\n\r\nconst initialState = {\r\n    books: [\r\n       {title: \"The Book\", autor: \"Miki Rurk\", discription: \"Lorem Ispum\", }\r\n    ],\r\n}\r\n\r\nconst booksReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_TO_LIST: {\r\n            for(let i = state.posts.length - 1; i >= 0; i--){\r\n                if(state.posts[i].used === false){\r\n                    let posts = [...state.posts];\r\n                    posts[i].used = true;\r\n                    return {posts: posts}\r\n                }\r\n            }\r\n            return state\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const postsReducer = combineReducers({list: booksReducer});"]},"metadata":{},"sourceType":"module"}