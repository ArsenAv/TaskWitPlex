{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\Myproject\\\\client\\\\src\\\\components\\\\Book.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport \"../index.css\";\nimport { getCommentsThunk, sendCommentThunk, sendRatingThunk, getRatingsThunk } from '../redux/booksSlice';\nimport { users } from \"../redux/userSlice\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Book(props) {\n  _s();\n\n  const [word, setWord] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const inputRef = useRef();\n  const mailInputRef = useRef();\n  const bookId = props.match.params.id;\n  const books = useSelector(state => state.books.books);\n  const verify = useSelector(state => state.users.token);\n  const comment = useSelector(state => state.books.comments);\n  const Rating = useSelector(state => state.books.ratings);\n  const book = books.find(book => book._id === bookId);\n  const dispatch = useDispatch();\n  console.log(Rating);\n  useEffect(() => {\n    dispatch(getCommentsThunk(bookId, verify));\n  }, []);\n  useEffect(() => {\n    dispatch(getRatingsThunk(bookId, verify));\n  }, []);\n\n  const handleWord = () => {\n    const inputValue = inputRef.current.value;\n    const mailValue = mailInputRef.current.value;\n    dispatch(sendCommentThunk(bookId, inputValue, mailValue, verify));\n  };\n\n  const ratingChanged = newRating => {\n    console.log(newRating);\n    {\n      dispatch(sendRatingThunk(bookId, ratecount, verify));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid bookcase\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem',\n            display: \"block\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: book.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: book.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: book.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(ReactStars, {\n          count: 5,\n          onChange: ratingChanged,\n          size: 24,\n          activeColor: \"#ffd700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"col-lg-3 \",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            id: \"inputGroup-sizing-default\",\n            children: \"Your Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            ref: inputRef,\n            onChange: e => setWord(e.target.value),\n            value: word,\n            \"aria-label\": \"Default\",\n            \"aria-describedby\": \"inputGroup-sizing-default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            id: \"inputGroup-sizing-default\",\n            children: \"Your Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            ref: mailInputRef,\n            onChange: e => setMail(e.target.value),\n            value: mail,\n            \"aria-label\": \"Default\",\n            \"aria-describedby\": \"inputGroup-sizing-default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleWord,\n            variant: \"secondary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comment && comment.length > 0 && comment.map(comment => {\n          return /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              variant: \"warning\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [comment.mail, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 67\n              }, this), comment.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Book, \"lBj4m3QF+WGkgjaA4a5U7bz5/PI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Book;\nexport default _c2 = withRouter(Book);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Book\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/components/Book.js"],"names":["React","useState","useRef","useEffect","useSelector","useDispatch","Card","InputGroup","Button","FormControl","ListGroup","getCommentsThunk","sendCommentThunk","sendRatingThunk","getRatingsThunk","users","ReactStars","withRouter","Book","props","word","setWord","mail","setMail","inputRef","mailInputRef","bookId","match","params","id","books","state","verify","token","comment","comments","Rating","ratings","book","find","_id","dispatch","console","log","handleWord","inputValue","current","value","mailValue","ratingChanged","newRating","ratecount","width","display","title","author","description","e","target","length","map","text"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState , useRef, useEffect} from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Card from 'react-bootstrap/Card'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport \"../index.css\"\r\nimport { getCommentsThunk, sendCommentThunk ,sendRatingThunk,getRatingsThunk} from '../redux/booksSlice'\r\nimport {users} from \"../redux/userSlice\"\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nimport { withRouter } from 'react-router-dom'\r\nfunction Book(props) {\r\n    const [word,setWord] = useState(\"\")\r\n    const [mail,setMail] = useState(\"\")\r\n    const inputRef = useRef()\r\n    const mailInputRef = useRef()\r\n    const bookId = props.match.params.id\r\n    const books = useSelector(state => state.books.books)\r\n    const verify = useSelector(state => state.users.token)\r\n    const comment = useSelector(state => state.books.comments)\r\n    const Rating = useSelector(state => state.books.ratings)\r\n    const book = books.find(book => book._id === bookId)\r\n    const dispatch = useDispatch();\r\n    console.log(Rating)\r\n    useEffect(() => { dispatch(getCommentsThunk(bookId,verify)) }, [])\r\n    useEffect(() => { dispatch(getRatingsThunk(bookId,verify)) }, [])\r\n    const handleWord = () =>{\r\n         const inputValue =  inputRef.current.value\r\n         const mailValue = mailInputRef.current.value\r\n         dispatch(sendCommentThunk(bookId, inputValue, mailValue, verify)) \r\n    }\r\n    const ratingChanged = (newRating) => {\r\n        console.log(newRating)\r\n        { dispatch(sendRatingThunk(bookId, ratecount, verify)) }\r\n      };\r\n      \r\n    return(\r\n        <div className = \"container-fluid bookcase\">\r\n            <div className = \"row\">\r\n            <div className = \"col-md-6\">\r\n         <Card style={{ width: '18rem' , display: \"block\"}}>\r\n             <Card.Body>\r\n             <Card.Title>{book.title}</Card.Title>\r\n             <Card.Subtitle className=\"mb-2 text-muted\">{book.author}</Card.Subtitle>\r\n             <Card.Text>\r\n                 \r\n                 {book.description}\r\n             </Card.Text>\r\n             </Card.Body>\r\n         </Card>\r\n         <ReactStars\r\n            count={5}\r\n            onChange={ratingChanged}\r\n            size={24}\r\n            activeColor=\"#ffd700\"\r\n            />\r\n         </div>\r\n        <div className = \"col-md-6\">\r\n         <InputGroup className=\"col-lg-3 \">\r\n             \r\n              <InputGroup.Text  id=\"inputGroup-sizing-default\">Your Comment</InputGroup.Text>\r\n              <FormControl ref ={inputRef} onChange = {e => setWord(e.target.value)} value = {word}\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n              />\r\n                   \r\n             \r\n              <InputGroup.Text  id=\"inputGroup-sizing-default\">Your Mail</InputGroup.Text>\r\n              <FormControl ref ={mailInputRef} onChange = {e => setMail(e.target.value)} value = {mail}\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n              />\r\n                 <Button onClick = {handleWord} variant=\"secondary\">Submit</Button>\r\n              </InputGroup>\r\n              </div>\r\n              <div>{comment && comment.length > 0 && comment.map(comment => {\r\n                    return <ListGroup>\r\n                                <ListGroup.Item variant=\"warning\"><span>{comment.mail}:</span>{comment.text}</ListGroup.Item>\r\n                           </ListGroup>\r\n              })}</div>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Book)\r\n\r\n"]},"metadata":{},"sourceType":"module"}