{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { FETCH_POSTS } from './actions';\nimport axios from 'axios';\nconst initialState = {\n  books: []\n};\n\nconst booksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_POSTS:\n      {\n        return dispatch => {\n          return axios.get(\"http://localhost:5000/api/auth/books\").then(response => {\n            return response.data;\n          }).then(data => {\n            dispatch({\n              type: FETCH_POSTS,\n              payload: data\n            });\n          }).catch(error => {\n            throw error;\n          });\n        };\n      }\n\n    default:\n      return 1;\n  }\n};\n\nexport const postsReducer = combineReducers({\n  list: booksReducer\n});","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/redux/reducers.js"],"names":["combineReducers","FETCH_POSTS","axios","initialState","books","booksReducer","state","action","type","dispatch","get","then","response","data","payload","catch","error","postsReducer","list"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA2B,WAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAL;AAAiB;AACb,eAAQQ,QAAD,IAAc;AACjB,iBAAOP,KAAK,CAACQ,GAAN,CAAU,sCAAV,EACFC,IADE,CACGC,QAAQ,IAAI;AACd,mBAAOA,QAAQ,CAACC,IAAhB;AACH,WAHE,EAIFF,IAJE,CAIGE,IAAI,IAAI;AACVJ,YAAAA,QAAQ,CAAC;AACLD,cAAAA,IAAI,EAAEP,WADD;AAELa,cAAAA,OAAO,EAAED;AAFJ,aAAD,CAAR;AAIH,WATE,EAUFE,KAVE,CAUIC,KAAK,IAAI;AACZ,kBAAOA,KAAP;AACH,WAZE,CAAP;AAaH,SAdD;AAeH;;AACD;AAAS,aAAO,CAAP;AAlBb;AAoBH,CArBD;;AAyBA,OAAO,MAAMC,YAAY,GAAGjB,eAAe,CAAC;AAACkB,EAAAA,IAAI,EAAEb;AAAP,CAAD,CAApC","sourcesContent":["import {combineReducers} from 'redux';\r\nimport { FETCH_POSTS} from './actions';\r\nimport axios from 'axios'\r\n\r\n\r\nconst initialState = {\r\n    books: [\r\n       \r\n    ],\r\n}\r\n\r\nconst booksReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FETCH_POSTS:{\r\n            return (dispatch) => {\r\n                return axios.get(\"http://localhost:5000/api/auth/books\")\r\n                    .then(response => {\r\n                        return response.data\r\n                    })\r\n                    .then(data => {\r\n                        dispatch({\r\n                            type: FETCH_POSTS,\r\n                            payload: data\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        throw (error);\r\n                    });\r\n            };\r\n        }\r\n        default: return 1;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const postsReducer = combineReducers({list: booksReducer});"]},"metadata":{},"sourceType":"module"}