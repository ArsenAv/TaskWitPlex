{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\Myproject\\\\client\\\\src\\\\pages\\\\AuthPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthPage = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const message = useMessage();\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n\n  const formHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const registerHandler = async () => {\n    try {\n      const data = await request('/api/auth/register', 'POST', { ...form\n      });\n      message(data.message);\n    } catch (e) {}\n  };\n\n  const loginHandler = async () => {\n    try {\n      const data = await request('/api/auth/login', 'POST', { ...form\n      });\n      auth.login(data.token, data.userId);\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form-inline \",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-1\",\n      controlId: \"formGroupEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"email\",\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: form.email,\n        placeholder: \"\",\n        name: \"email\",\n        type: \"text\",\n        onChange: formHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-1\",\n      controlId: \"formGroupPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"email\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"\",\n        type: \"password\",\n        value: form.password,\n        name: \"password\",\n        onChange: formHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        disabled: loading,\n        onClick: loginHandler,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        disabled: loading,\n        onClick: registerHandler,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthPage, \"nD/+HFTFNDxMsY1kt/l6Jt6MTKs=\", false, function () {\n  return [useMessage, useHttp];\n});\n\n_c = AuthPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/pages/AuthPage.js"],"names":["React","useContext","useEffect","useState","AuthContext","useHttp","useMessage","Form","Button","AuthPage","auth","message","loading","error","request","clearError","form","setForm","email","password","formHandler","event","target","name","value","registerHandler","data","e","loginHandler","login","token","userId"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useMessage } from '../hooks/message.hook';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../index.css'\r\n\r\n\r\nexport const AuthPage = () =>{\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {loading, error, request, clearError} = useHttp()\r\n    const [form, setForm] = useState({\r\n        email: \"\", password: \"\"\r\n    });\r\n    useEffect( () => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    \r\n    const formHandler = event =>{\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n    const registerHandler = async () => {\r\n        try{\r\n            const data = await (request('/api/auth/register', 'POST', {...form}))\r\n            message(data.message)\r\n        } catch (e){\r\n            \r\n        }\r\n    }\r\n    const loginHandler = async () => { \r\n        try{\r\n        const data = await (request('/api/auth/login', 'POST', {...form}))\r\n           auth.login(data.token, data.userId);\r\n        } catch (e){\r\n          \r\n        }\r\n    }\r\n    return(\r\n      \r\n    <Form className = \"form-inline \" >  \r\n        <Form.Group className=\"mb-1\" controlId=\"formGroupEmail\">\r\n            <Form.Label htmlFor =\"email\">Email address</Form.Label>\r\n            <Form.Control value={form.email} placeholder =\"\" name = \"email\" type=\"text\" onChange = {formHandler}  />\r\n    \r\n         </Form.Group>\r\n        <Form.Group className=\"mb-1\" controlId=\"formGroupPassword\">\r\n             <Form.Label htmlFor=\"email\">Password</Form.Label>\r\n             <Form.Control placeholder =\"\"  type=\"password\" value={form.password} name = \"password\" onChange = {formHandler} />\r\n         <Button variant=\"primary\" disabled = {loading} onClick = {loginHandler}>\r\n                 Login\r\n        </Button>\r\n         <Button variant=\"primary\" disabled = {loading} onClick = {registerHandler}>\r\n                 Register\r\n         </Button>\r\n        </Form.Group>\r\n    </Form>\r\n    \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}