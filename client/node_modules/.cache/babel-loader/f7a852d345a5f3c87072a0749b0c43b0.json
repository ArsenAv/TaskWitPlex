{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\Myproject\\\\client\\\\src\\\\pages\\\\AllBooksPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport BookBox from \"../components/BookBox\";\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { getBooksThunk, getBookCountThunk, updateCurrentPageThunk } from '../redux/actions';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AllBooksPage = () => {\n  _s();\n\n  const books = useSelector(state => alert(JSON.stringify(state.books.state.books)));\n  const limit = useSelector(state => state.books.state.limit);\n  const pageCount = useSelector(state => state.books.state.pageCount);\n  const currentPage = useSelector(state => state.books.state.currentPage);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getBooksThunk(currentPage, limit));\n  }, []);\n  useEffect(() => {\n    dispatch(getBookCountThunk());\n  }, []);\n\n  const handleChangePage = e => {\n    const selectedPage = e.selected;\n    dispatch(updateCurrentPageThunk(selectedPage + 1, limit));\n  };\n\n  let pages = [];\n\n  for (let i = 1; i < pageCount; i++) {\n    pages.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 3,\n      className: \"g-4\",\n      children: books && books.length > 0 && books.map(book => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BookBox, {\n            book: book\n          }, book._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/book/$book\",\n            className: \"btn btn-primary\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllBooksPage, \"lxGyzroU8qx38VzW4weFZ2xrPGw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = AllBooksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllBooksPage\");","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/pages/AllBooksPage.js"],"names":["React","useEffect","useSelector","useDispatch","Link","BookBox","Row","Container","Col","getBooksThunk","getBookCountThunk","updateCurrentPageThunk","ReactPaginate","AllBooksPage","books","state","alert","JSON","stringify","limit","pageCount","currentPage","dispatch","handleChangePage","e","selectedPage","selected","pages","i","push","length","map","book","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAO,sCAAP;AACA,SAAQC,aAAR,EAAuBC,iBAAvB,EAA0CC,sBAA1C,QAAuE,kBAAvE;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAOA,OAAO,MAAMC,YAAY,GAAG,MAAK;AAAA;;AAC7B,QAAMC,KAAK,GAAGZ,WAAW,CAACa,KAAK,IAAIC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACD,KAAN,CAAYC,KAAZ,CAAkBD,KAAjC,CAAD,CAAf,CAAzB;AACA,QAAMK,KAAK,GAAGjB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYC,KAAZ,CAAkBI,KAA5B,CAAzB;AACA,QAAMC,SAAS,GAAGlB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYC,KAAZ,CAAkBK,SAA5B,CAA7B;AACA,QAAMC,WAAW,GAAGnB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYC,KAAZ,CAAkBM,WAA5B,CAA/B;AACA,QAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AAACqB,IAAAA,QAAQ,CAACb,aAAa,CAACY,WAAD,EAAcF,KAAd,CAAd,CAAR;AAA4C,GAApD,EAAsD,EAAtD,CAAT;AACAlB,EAAAA,SAAS,CAAC,MAAM;AAACqB,IAAAA,QAAQ,CAACZ,iBAAiB,EAAlB,CAAR;AAA8B,GAAtC,EAAwC,EAAxC,CAAT;;AAEA,QAAMa,gBAAgB,GAAIC,CAAD,IAAO;AAC5B,UAAMC,YAAY,GAAGD,CAAC,CAACE,QAAvB;AACAJ,IAAAA,QAAQ,CAACX,sBAAsB,CAACc,YAAY,GAAG,CAAhB,EAAmBN,KAAnB,CAAvB,CAAR;AACH,GAHD;;AAKA,MAAIQ,KAAK,GAAG,EAAZ;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,SAAnB,EAA8BQ,CAAC,EAA/B,EAAmC;AAC/BD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,sBACA;AAAK,IAAA,SAAS,EAAG,iBAAjB;AAAA,2BASK,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,SAAS,EAAC,KAApC;AAAA,gBACKd,KAAK,IAAIA,KAAK,CAACgB,MAAN,GAAa,CAAtB,IAA2BhB,KAAK,CAACiB,GAAN,CAAUC,IAAI,IAAI;AACxC,4BACA;AAAA,kCACA,QAAC,OAAD;AAAS,YAAA,IAAI,EAAIA;AAAjB,aAA8BA,IAAI,CAACC,GAAnC;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,aAAT;AAAwB,YAAA,SAAS,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA;AAML,OAP2B;AADhC;AAAA;AAAA;AAAA;AAAA;AATL;AAAA;AAAA;AAAA;AAAA,UADA;AA4BH,CAhDM;;GAAMpB,Y;UACKX,W,EACAA,W,EACIA,W,EACEA,W,EACHC,W;;;KALRU,Y","sourcesContent":["import React, { useEffect} from 'react';\r\nimport {useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookBox from \"../components/BookBox\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {getBooksThunk, getBookCountThunk, updateCurrentPageThunk} from '../redux/actions'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const AllBooksPage = () =>{\r\n    const books = useSelector(state => alert(JSON.stringify(state.books.state.books)));\r\n    const limit = useSelector(state => state.books.state.limit)\r\n    const pageCount = useSelector(state => state.books.state.pageCount)\r\n    const currentPage = useSelector(state => state.books.state.currentPage)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {dispatch(getBooksThunk(currentPage, limit))}, [])\r\n    useEffect(() => {dispatch(getBookCountThunk())}, [])\r\n\r\n    const handleChangePage = (e) => {\r\n        const selectedPage = e.selected;\r\n        dispatch(updateCurrentPageThunk(selectedPage + 1, limit))\r\n    }\r\n    \r\n    let pages = []\r\n    for(let i = 1; i < pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n      \r\n    return(\r\n    <div className = \"container-fluid\">\r\n        {/* <ReactPaginate \r\n            peviousLabel = {'prev'}\r\n            nextLabel = {'next'}\r\n            breakLabel = {'...'}\r\n            pageCount = {pageCount}\r\n            pageRangeDisplayed = {3}\r\n            marginPagesDisplayed = {2} \r\n            onPageChange={handleChangePage}/> */}\r\n         <Row xs={1} md={2} lg={3} className=\"g-4\">\r\n            { books && books.length>0 && books.map(book => {\r\n                   return(\r\n                   <div>\r\n                   <BookBox book = {book} key = {book._id}/> \r\n                   <Link to=\"/book/$book\"  className=\"btn btn-primary\">Sign up</Link>\r\n                   </div>\r\n                   )\r\n             }) }\r\n         \r\n         </Row>\r\n    \r\n        {/* {pages.map((page) => <div onClick={() => {dispatch(updateCurrentPageThunk(page + 1, limit))}}>{page}</div>)} */}\r\n     \r\n     \r\n    </div>\r\n      \r\n    )   \r\n}"]},"metadata":{},"sourceType":"module"}