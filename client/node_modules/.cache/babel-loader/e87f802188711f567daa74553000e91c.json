{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { UPDATE_BOOKS } from './actions';\nimport axios from 'axios';\nimport { fetchData } from './actions';\nconst initialState = {\n  books: [],\n  currentPage: 1,\n  limit: 5,\n  totalBooksCount: 0,\n  gotResponse: false\n};\n\nconst booksReducer = async (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_BOOKS:\n      {\n        const response = await axios.get(action.payload);\n        return { ...state,\n          books: response.data,\n          gotResponse: true\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport const postsReducer = combineReducers({\n  books: booksReducer\n});","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/redux/reducers.js"],"names":["combineReducers","UPDATE_BOOKS","axios","fetchData","initialState","books","currentPage","limit","totalBooksCount","gotResponse","booksReducer","state","action","type","response","get","payload","data","postsReducer"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAAyB,WAAzB;AAKA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,WAAW,EAAE,CAFI;AAGjBC,EAAAA,KAAK,EAAE,CAHU;AAIjBC,EAAAA,eAAe,EAAE,CAJA;AAKjBC,EAAAA,WAAW,EAAC;AALK,CAArB;;AAQA,MAAMC,YAAY,GAAG,OAAOC,KAAK,GAAGP,YAAf,EAA6BQ,MAA7B,KAAwC;AACzD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKZ,YAAL;AAAkB;AAEd,cAAMa,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUH,MAAM,CAACI,OAAjB,CAAvB;AACI,eAAO,EAAC,GAAGL,KAAJ;AAAWN,UAAAA,KAAK,EAAES,QAAQ,CAACG,IAA3B;AAAgCR,UAAAA,WAAW,EAAC;AAA5C,SAAP;AAGP;;AACD;AAAS;AACL,eAAOE,KAAP;AACH;AAXL;AAcH,CAfD;;AAmBA,OAAO,MAAMO,YAAY,GAAGlB,eAAe,CAAC;AAACK,EAAAA,KAAK,EAAEK;AAAR,CAAD,CAApC","sourcesContent":["import {combineReducers} from 'redux';\r\nimport { UPDATE_BOOKS } from './actions';\r\nimport axios from 'axios'\r\nimport { fetchData} from './actions';\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    books: [],\r\n    currentPage: 1,\r\n    limit: 5,\r\n    totalBooksCount: 0,\r\n    gotResponse:false\r\n}\r\n\r\nconst booksReducer = async (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case UPDATE_BOOKS:{\r\n            \r\n            const response = await axios.get(action.payload)\r\n                return {...state, books: response.data,gotResponse:true}\r\n\r\n            \r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\nexport const postsReducer = combineReducers({books: booksReducer});"]},"metadata":{},"sourceType":"module"}