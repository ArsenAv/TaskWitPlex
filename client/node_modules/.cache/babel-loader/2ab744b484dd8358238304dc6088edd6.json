{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\Myproject\\\\client\\\\src\\\\pages\\\\AllBooksPage.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useSelector, useDispatch, useCallback } from \"react-redux\";\nimport { fetchData } from '../redux/actions';\nimport { changeBooks } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nexport const AllBooksPage = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const dispatch = useDispatch();\n\n  const loadBooks = () => {\n    _s();\n\n    dispatch(fetchData);\n    const books = useSelector(state => state.allbooks);\n  };\n\n  _s(loadBooks, \"3njaM85SXkF4dJwMQTmAYAXfcfs=\", false, function () {\n    return [useSelector];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadBooks,\n      children: \"LOAD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}; //     const dispatch = useDispatch();\n//     // downloadBooks(dispatch)\n//     dispatch(fetchData())\n//     sleep(2000)\n\n_s2(AllBooksPage, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AllBooksPage;\nconst books = useSelector(state => state.allbooks); //     console.log(\"books: \" + JSON.stringify(useSelector(state => state)))\n//     //  const book = books.reduce(book => {\n//     //     return books\n//     // });\n\nvar _c;\n\n$RefreshReg$(_c, \"AllBooksPage\");","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/pages/AllBooksPage.js"],"names":["React","useState","Card","useSelector","useDispatch","useCallback","fetchData","changeBooks","axios","require","AllBooksPage","dispatch","loadBooks","books","state","allbooks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,sCAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,WAAlC,QAAoD,aAApD;AACA,SAASC,SAAT,QAAyB,kBAAzB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAIA,OAAO,MAAMC,YAAY,GAAG,MAAK;AAAA;;AAAA;;AAC7B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,QAAMQ,SAAS,GAAG,MAAK;AAAA;;AACnBD,IAAAA,QAAQ,CAACL,SAAD,CAAR;AACA,UAAMO,KAAK,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAzB;AAEH,GAJD;;AAF6B,KAEvBH,SAFuB;AAAA,YAIXT,WAJW;AAAA;;AAS7B,sBACA;AAAK,IAAA,SAAS,EAAG,iBAAjB;AAAA,2BAUI;AAAQ,MAAA,OAAO,EAAIS,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADA;AAgBH,CAzBM,C,CA4BP;AACA;AACA;AACA;;IA/BaF,Y;UACQN,W;;;KADRM,Y;AAgCT,MAAMG,KAAK,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAzB,C,CAEJ;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {useSelector, useDispatch, useCallback} from \"react-redux\";\r\nimport { fetchData} from '../redux/actions';\r\nimport {changeBooks} from '../redux/actions'\r\nconst axios = require('axios')\r\n\r\n\r\n\r\nexport const AllBooksPage = () =>{\r\n    const dispatch = useDispatch();\r\n    const loadBooks = () =>{\r\n        dispatch(fetchData)\r\n        const books = useSelector(state => state.allbooks);\r\n       \r\n    }\r\n\r\n \r\n    return(\r\n    <div className = \"container-fluid\">\r\n     {/* <Card style={{ width: '18rem' }}>\r\n        <Card.Body>\r\n         <Card.Title></Card.Title>\r\n         <Card.Subtitle className=\"mb-2 text-muted\"></Card.Subtitle>\r\n         <Card.Text>\r\n           \r\n          </Card.Text>\r\n         </Card.Body>\r\n     </Card> */}\r\n        <button onClick = {loadBooks}>LOAD</button>\r\n    </div>\r\n      \r\n    )\r\n    \r\n}\r\n\r\n\r\n//     const dispatch = useDispatch();\r\n//     // downloadBooks(dispatch)\r\n//     dispatch(fetchData())\r\n//     sleep(2000)\r\n    const books = useSelector(state => state.allbooks);\r\n    \r\n//     console.log(\"books: \" + JSON.stringify(useSelector(state => state)))\r\n//     //  const book = books.reduce(book => {\r\n//     //     return books\r\n//     // });"]},"metadata":{},"sourceType":"module"}