{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\Myproject\\\\client\\\\src\\\\pages\\\\AllBooksPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport BookBox from \"../components/BookBox\";\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { getBooksThunk, getBookCountThunk, updateCurrentPageThunk } from '../redux/actions';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AllBooksPage = () => {\n  _s();\n\n  const books = useSelector(state => state.books.state.books);\n  const limit = useSelector(state => state.books.state.limit);\n  const pageCount = useSelector(state => state.books.state.pageCount);\n  const currentPage = useSelector(state => alert('state: ' + JSON.stringify(state.books.state.currentPage))); // state.books.state.currentPage\n\n  const dispatch = useDispatch();\n  useEffect(() => alert('current page: ' + currentPage), []); //{dispatch(getBooksThunk(currentPage, limit))}\n\n  useEffect(() => {\n    dispatch(getBookCountThunk());\n  }, []);\n\n  const handleChangePage = e => {\n    const selectedPage = e.selected;\n    dispatch(updateCurrentPageThunk(selectedPage + 1, limit));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(ReactPaginate, {\n      peviousLabel: 'prev',\n      nextLabel: 'next',\n      breakLabel: '...',\n      pageCount: pageCount,\n      pageRangeDisplayed: 3,\n      marginPagesDisplayed: 2,\n      onPageChange: handleChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 3,\n      className: \"g-4\",\n      children: books && books.length > 0 && books.map(book => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BookBox, {\n            book: book\n          }, book._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/book/$book\",\n            className: \"btn btn-primary\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllBooksPage, \"lxGyzroU8qx38VzW4weFZ2xrPGw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = AllBooksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllBooksPage\");","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/pages/AllBooksPage.js"],"names":["React","useEffect","useSelector","useDispatch","Link","BookBox","Row","Container","Col","getBooksThunk","getBookCountThunk","updateCurrentPageThunk","ReactPaginate","AllBooksPage","books","state","limit","pageCount","currentPage","alert","JSON","stringify","dispatch","handleChangePage","e","selectedPage","selected","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { useEffect} from 'react';\r\nimport {useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookBox from \"../components/BookBox\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {getBooksThunk, getBookCountThunk, updateCurrentPageThunk} from '../redux/actions'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const AllBooksPage = () =>{\r\n    const books = useSelector(state => state.books.state.books);\r\n    const limit = useSelector(state => state.books.state.limit)\r\n    const pageCount = useSelector(state => state.books.state.pageCount)\r\n    const currentPage = useSelector(state => alert('state: ' + JSON.stringify(state.books.state.currentPage))) // state.books.state.currentPage\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => alert('current page: ' + currentPage), []) //{dispatch(getBooksThunk(currentPage, limit))}\r\n    useEffect(() => {dispatch(getBookCountThunk())}, [])\r\n\r\n    const handleChangePage = (e) => {\r\n        const selectedPage = e.selected;\r\n        dispatch(updateCurrentPageThunk(selectedPage + 1, limit))\r\n    }\r\n    \r\n      \r\n    return(\r\n    <div className = \"container-fluid\">\r\n        <ReactPaginate \r\n            peviousLabel = {'prev'}\r\n            nextLabel = {'next'}\r\n            breakLabel = {'...'}\r\n            pageCount = {pageCount}\r\n            pageRangeDisplayed = {3}\r\n            marginPagesDisplayed = {2} \r\n            onPageChange={handleChangePage}/>\r\n         <Row xs={1} md={2} lg={3} className=\"g-4\">\r\n            { books && books.length>0 && books.map(book => {\r\n                   return(\r\n                   <div>\r\n                   <BookBox book = {book} key = {book._id}/> \r\n                   <Link to=\"/book/$book\"  className=\"btn btn-primary\">Sign up</Link>\r\n                   </div>\r\n                   )\r\n             }) }\r\n         \r\n         </Row>\r\n     \r\n     \r\n    </div>\r\n      \r\n    )   \r\n}"]},"metadata":{},"sourceType":"module"}