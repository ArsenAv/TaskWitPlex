{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { FETCH_POSTS, CHANGE_BOOKS } from './actions';\n\nconst axios = require('axios');\n\nconst initialState = {\n  books: []\n};\n\nconst booksReducer = async (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_POSTS:\n      {\n        await fetch('http://example.com/movies.json').then(response => {\n          return response.json();\n        }).then(data => {\n          console.log(data);\n        });\n        return { ...state,\n          books: [...state.books, ...state.payload]\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport const postsReducer = combineReducers({\n  allbooks: booksReducer\n});","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/redux/reducers.js"],"names":["combineReducers","FETCH_POSTS","CHANGE_BOOKS","axios","require","initialState","books","booksReducer","state","action","type","fetch","then","response","json","data","console","log","payload","postsReducer","allbooks"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,WAA1C;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAIA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAMA,MAAMC,YAAY,GAAG,OAAOC,KAAK,GAAGH,YAAf,EAA6BI,MAA7B,KAAwC;AACzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,WAAL;AAAiB;AACd,cAAMU,KAAK,CAAC,gCAAD,CAAL,CACAC,IADA,CACMC,QAAD,IAAc;AACnB,iBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,SAHG,EAICF,IAJD,CAIOG,IAAD,IAAU;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,SANG,CAAN;AAOC,eAAM,EAAC,GAAGP,KAAJ;AAAWF,UAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiB,GAAGE,KAAK,CAACU,OAA1B;AAAlB,SAAN;AACH;;AACD;AAAS;AACL,eAAOV,KAAP;AACH;AAbL;AAeH,CAhBD;;AAoBA,OAAO,MAAMW,YAAY,GAAGnB,eAAe,CAAC;AAACoB,EAAAA,QAAQ,EAAEb;AAAX,CAAD,CAApC","sourcesContent":["import {combineReducers} from 'redux';\r\nimport { FETCH_POSTS, CHANGE_BOOKS } from './actions';\r\nconst axios = require('axios')\r\n\r\n\r\n\r\nconst initialState = {\r\n    books: [\r\n       \r\n    ]\r\n}\r\n\r\nconst booksReducer = async (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FETCH_POSTS:{\r\n           await fetch('http://example.com/movies.json')\r\n                .then((response) => {\r\n                 return response.json();\r\n             })\r\n                 .then((data) => {\r\n                 console.log(data);\r\n             });\r\n            return{...state, books: [...state.books, ...state.payload]}\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const postsReducer = combineReducers({allbooks: booksReducer});"]},"metadata":{},"sourceType":"module"}