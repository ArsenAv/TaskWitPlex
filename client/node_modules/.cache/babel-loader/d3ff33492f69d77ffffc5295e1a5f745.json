{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\Myproject\\\\client\\\\src\\\\pages\\\\AuthPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthPage = () => {\n  _s();\n\n  // const auth = useContext(AuthContext);\n  // const message = useMessage();\n  // const {loading, error, request, clearError} = useHttp()\n  // const [form, setForm] = useState({\n  //     email: \"\", password: \"\"\n  // });\n  // useEffect( () => {\n  //     message(error)\n  //     clearError()\n  // }, [error, message, clearError])\n  // const formHandler = event =>{\n  //     setForm({...form, [event.target.name]: event.target.value})\n  // }\n  // const registerHandler = async () => {\n  //     try{\n  //         const data = await (request('/api/auth/register', 'POST', {...form}))\n  //         message(data.message)\n  //     } catch (e){\n  //     }\n  // }\n  // const loginHandler = async () => { \n  //     try{\n  //     const data = await (request('/api/auth/login', 'POST', {...form}))\n  //        auth.login(data.token, data.userId);\n  //     } catch (e){\n  //     }\n  // }\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const registerHandler = () => {};\n\n  const formHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  console.log({ ...form.email\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \" form-inline  \",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-2\",\n      controlId: \"formGroupEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"email\",\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: form.email,\n        placeholder: \"\",\n        name: \"email\",\n        type: \"text\",\n        onChange: formHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-2\",\n      controlId: \"formGroupPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"email\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"\",\n        type: \"password\",\n        value: form.password,\n        name: \"password\",\n        onChange: formHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: registerHandler,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthPage, \"VbeYte+yD1NlNNcB695NvYpclpw=\");\n\n_c = AuthPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/pages/AuthPage.js"],"names":["React","useContext","useEffect","useState","AuthContext","useHttp","useMessage","Form","Button","AuthPage","form","setForm","email","password","registerHandler","formHandler","event","target","name","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,sCAAP;AACA,OAAO,cAAP;;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAC7BS,IAAAA,KAAK,EAAE,EADsB;AAClBC,IAAAA,QAAQ,EAAE;AADQ,GAAD,CAAhC;;AAGA,QAAMC,eAAe,GAAG,MAAK,CAE5B,CAFD;;AAGC,QAAMC,WAAW,GAAGC,KAAK,IAAG;AACxBL,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACM,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA5C,KAAD,CAAP;AACH,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAC,GAAGX,IAAI,CAACE;AAAT,GAAZ;AACD,sBAEA,QAAC,IAAD;AAAM,IAAA,SAAS,EAAG,gBAAlB;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,gBAAvC;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,OAAO,EAAE,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAEF,IAAI,CAACE,KAA1B;AAAiC,QAAA,WAAW,EAAE,EAA9C;AAAiD,QAAA,IAAI,EAAG,OAAxD;AAAgE,QAAA,IAAI,EAAC,MAArE;AAA4E,QAAA,QAAQ,EAAIG;AAAxF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,mBAAvC;AAAA,8BACK,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAE,EAA3B;AAA+B,QAAA,IAAI,EAAC,UAApC;AAA+C,QAAA,KAAK,EAAEL,IAAI,CAACG,QAA3D;AAAqE,QAAA,IAAI,EAAG,UAA5E;AAAuF,QAAA,QAAQ,EAAIE;AAAnG;AAAA;AAAA;AAAA;AAAA,cAFL,eAMC,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA2B,QAAA,OAAO,EAAID,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAND;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;AAsBH,CAhEM;;GAAML,Q;;KAAAA,Q","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useMessage } from '../hooks/message.hook';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../index.css'\r\n\r\n\r\nexport const AuthPage = () =>{\r\n    // const auth = useContext(AuthContext);\r\n    // const message = useMessage();\r\n    // const {loading, error, request, clearError} = useHttp()\r\n    // const [form, setForm] = useState({\r\n    //     email: \"\", password: \"\"\r\n    // });\r\n    // useEffect( () => {\r\n    //     message(error)\r\n    //     clearError()\r\n    // }, [error, message, clearError])\r\n\r\n    \r\n    // const formHandler = event =>{\r\n    //     setForm({...form, [event.target.name]: event.target.value})\r\n    // }\r\n    // const registerHandler = async () => {\r\n    //     try{\r\n    //         const data = await (request('/api/auth/register', 'POST', {...form}))\r\n    //         message(data.message)\r\n    //     } catch (e){\r\n            \r\n    //     }\r\n    // }\r\n    // const loginHandler = async () => { \r\n    //     try{\r\n    //     const data = await (request('/api/auth/login', 'POST', {...form}))\r\n    //        auth.login(data.token, data.userId);\r\n    //     } catch (e){\r\n          \r\n    //     }\r\n    // }\r\n    const [form, setForm] = useState({\r\n        email: \"\", password: \"\"\r\n    });\r\n    const registerHandler = () =>{\r\n\r\n    }\r\n     const formHandler = event =>{\r\n         setForm({...form, [event.target.name]: event.target.value})\r\n     }\r\n     console.log({...form.email})\r\n    return(\r\n      \r\n    <Form className = \" form-inline  \" >  \r\n        <Form.Group className=\"mb-2\" controlId=\"formGroupEmail\">\r\n            <Form.Label htmlFor =\"email\">Email address</Form.Label>\r\n            <Form.Control value={form.email} placeholder =\"\" name = \"email\" type=\"text\" onChange = {formHandler}  />\r\n    \r\n         </Form.Group>\r\n        <Form.Group className=\"mb-2\" controlId=\"formGroupPassword\">\r\n             <Form.Label htmlFor=\"email\">Password</Form.Label>\r\n             <Form.Control placeholder =\"\"  type=\"password\" value={form.password} name = \"password\" onChange = {formHandler} />\r\n         {/* <Button variant=\"primary\" disabled = {loading} onClick = {loginHandler}> */}\r\n                 {/* Login */}\r\n        {/* </Button> */}\r\n         <Button variant=\"primary\"  onClick = {registerHandler}>\r\n             {/* disabled = {loading} */}\r\n                 Register\r\n         </Button>\r\n        </Form.Group>\r\n    </Form>\r\n    \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}