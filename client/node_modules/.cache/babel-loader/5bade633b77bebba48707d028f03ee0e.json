{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\Myproject\\\\client\\\\src\\\\pages\\\\AuthPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useMessage } from '../hooks/message.hook';\nimport { sendRegistrDataThunk, sendLoginDataThunk } from '../redux/userSlice';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const formHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const registerHandler = () => {\n    dispatch(sendRegistrDataThunk({ ...form\n    }.email, { ...form\n    }.password));\n  };\n\n  const loginHandler = () => {\n    dispatch(sendLoginDataThunk({ ...form\n    }.email, { ...form\n    }.password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form-inline\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 \",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"forminput\",\n          value: form.email,\n          placeholder: \"\",\n          name: \"email\",\n          type: \"text\",\n          onChange: formHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"email\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"\",\n          className: \"forminput \",\n          type: \"password\",\n          value: form.password,\n          name: \"password\",\n          onChange: formHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          className: \"btnout2\",\n          onClick: loginHandler,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          className: \"btnout1\",\n          onClick: registerHandler,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthPage, \"0AfSDlXFo66naAUtU5EzDrQpEgk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AuthPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/pages/AuthPage.js"],"names":["React","useState","useDispatch","useMessage","sendRegistrDataThunk","sendLoginDataThunk","Form","Button","AuthPage","dispatch","form","setForm","email","password","formHandler","event","target","name","value","registerHandler","loginHandler"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useMessage } from '../hooks/message.hook';\r\nimport { sendRegistrDataThunk ,sendLoginDataThunk } from '../redux/userSlice';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../auth.css'\r\n\r\n\r\nexport const AuthPage = () =>{\r\n    const dispatch = useDispatch();\r\n    const [form, setForm] = useState({\r\n        email: \"\", password: \"\"\r\n    });\r\n    \r\n     const formHandler = event =>{\r\n         setForm({...form, [event.target.name]: event.target.value})\r\n     }\r\n     const registerHandler = () =>{\r\n        dispatch(sendRegistrDataThunk({...form}.email, {...form}.password))\r\n     }\r\n     const loginHandler = () =>{\r\n        dispatch(sendLoginDataThunk({...form}.email, {...form}.password))\r\n     }\r\n\r\n    return(\r\n    <div className = \"auth\"> \r\n    <Form className = \"form-inline\" >  \r\n        <Form.Group className=\"mb-3 \" >\r\n            <Form.Label htmlFor =\"email\">Email</Form.Label>\r\n            <Form.Control className = \"forminput\"value={form.email} placeholder =\"\" name = \"email\" type=\"text\" onChange = {formHandler}  />\r\n    \r\n         </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n             <Form.Label htmlFor=\"email\">Password</Form.Label>\r\n             <Form.Control placeholder =\"\" className = \"forminput \" type=\"password\" value={form.password} name = \"password\" onChange = {formHandler} />\r\n         <Button variant=\"outline-secondary\" className = \"btnout2\" onClick = {loginHandler}>\r\n                 Login \r\n         </Button>\r\n         <Button variant=\"outline-secondary\"  className = \"btnout1\" onClick = {registerHandler}>\r\n              \r\n                 Register\r\n         </Button>\r\n        </Form.Group>\r\n    </Form>\r\n    </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}