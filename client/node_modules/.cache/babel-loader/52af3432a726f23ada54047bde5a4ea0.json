{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const userSlice = createSlice({\n  name: 'userSlice',\n  initialState: {\n    isAuthenticated: false,\n    userId: {}\n  },\n  reducers: {\n    saveUser: (state, action) => {\n      state.userId = action.payload;\n      state.isAuthenticated = true;\n    },\n    logoutUser: (state, action) => {\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n      state.userId = {};\n    }\n  }\n});\nexport const sendRegistrDataThunk = (email, password) => {\n  return () => {\n    axios.post(`http://localhost:5000/api/auth/register`, {\n      email,\n      password\n    });\n  };\n};\nexport const sendLoginDataThunk = (email, password) => {\n  return async dispatch => {\n    const response = await axios.post(`http://localhost:5000/api/auth/login`, {\n      email,\n      password\n    });\n    dispatch(saveUser(response.data.userId));\n    localStorage.setItem('token', response.data.token);\n  };\n};\nexport const authThunk = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/auth/auth`, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(saveUser(response.data.userId));\n      localStorage.setItem('token', response.data.token);\n    } catch (e) {\n      alert(e);\n      localStorage.removeItem('token');\n    }\n  };\n};\nexport const {\n  saveUser,\n  logoutUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/redux/userSlice.js"],"names":["createSlice","axios","userSlice","name","initialState","isAuthenticated","userId","reducers","saveUser","state","action","payload","logoutUser","localStorage","removeItem","sendRegistrDataThunk","email","password","post","sendLoginDataThunk","dispatch","response","data","setItem","token","authThunk","get","headers","authorization","getItem","e","alert","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;AACjCG,EAAAA,IAAI,EAAE,WAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,eAAe,EAAE,KADL;AAEZC,IAAAA,MAAM,EAAE;AAFI,GAFmB;AAOjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;AACxBD,MAAAA,KAAK,CAACH,MAAN,GAAeI,MAAM,CAACC,OAAtB;AACAF,MAAAA,KAAK,CAACJ,eAAN,GAAwB,IAAxB;AACH,KAJK;AAKNO,IAAAA,UAAU,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAkB;AAC1BD,MAAAA,KAAK,CAACJ,eAAN,GAAwB,KAAxB;AACAQ,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAL,MAAAA,KAAK,CAACH,MAAN,GAAe,EAAf;AACH;AATK;AAPuB,CAAD,CAA7B;AAmBP,OAAO,MAAMS,oBAAoB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAErD,SAAO,MAAM;AACThB,IAAAA,KAAK,CAACiB,IAAN,CAAY,yCAAZ,EAAsD;AAACF,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAtD;AACH,GAFD;AAGH,CALM;AAMP,OAAO,MAAME,kBAAkB,GAAG,CAACH,KAAD,EAAQC,QAAR,KAAqB;AACnD,SAAO,MAAOG,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACiB,IAAN,CAAa,sCAAb,EAAoD;AAACF,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAApD,CAAvB;AAEAG,IAAAA,QAAQ,CAACZ,QAAQ,CAACa,QAAQ,CAACC,IAAT,CAAchB,MAAf,CAAT,CAAR;AACAO,IAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BF,QAAQ,CAACC,IAAT,CAAcE,KAA5C;AAEH,GAND;AAOH,CARM;AASP,OAAO,MAAMC,SAAS,GAAG,MAAK;AAC1B,SAAO,MAAOL,QAAP,IAAoB;AACvB,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACyB,GAAN,CAAY,qCAAZ,EACxB;AAACC,QAAAA,OAAO,EAAC;AAACC,UAAAA,aAAa,EAAG,UAASf,YAAY,CAACgB,OAAb,CAAqB,OAArB,CAA8B;AAAxD;AAAT,OADwB,CAAvB;AAEAT,MAAAA,QAAQ,CAACZ,QAAQ,CAACa,QAAQ,CAACC,IAAT,CAAchB,MAAf,CAAT,CAAR;AACAO,MAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BF,QAAQ,CAACC,IAAT,CAAcE,KAA5C;AACP,KALG,CAKH,OAAMM,CAAN,EAAQ;AACLC,MAAAA,KAAK,CAACD,CAAD,CAAL;AACAjB,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACD;AACF,GAVD;AAWH,CAZM;AAeP,OAAO,MAAM;AAACN,EAAAA,QAAD;AAAWI,EAAAA;AAAX,IAAyBV,SAAS,CAAC8B,OAAzC;AACP,eAAe9B,SAAS,CAAC+B,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'userSlice',\r\n    initialState: {\r\n      isAuthenticated: false,\r\n      userId: {},\r\n      \r\n    }, \r\n    reducers: {\r\n        saveUser: (state, action) =>{\r\n            state.userId = action.payload\r\n            state.isAuthenticated = true\r\n        },\r\n        logoutUser: (state, action) =>{\r\n            state.isAuthenticated = false\r\n            localStorage.removeItem('token')\r\n            state.userId = {}\r\n        }\r\n    }\r\n})\r\nexport const sendRegistrDataThunk = (email, password) => {\r\n    \r\n    return () => {\r\n        axios.post(`http://localhost:5000/api/auth/register`, {email, password})\r\n    }\r\n}\r\nexport const sendLoginDataThunk = (email, password) => {\r\n    return async (dispatch) => {\r\n        const response = await axios.post (`http://localhost:5000/api/auth/login`, {email, password})\r\n      \r\n        dispatch(saveUser(response.data.userId))\r\n        localStorage.setItem('token', response.data.token)\r\n\r\n    }\r\n}\r\nexport const authThunk = () =>{\r\n    return async (dispatch) => {\r\n        try{\r\n            const response = await axios.get (`http://localhost:5000/api/auth/auth`, \r\n           {headers:{authorization: `Bearer ${localStorage.getItem('token')}`}})\r\n            dispatch(saveUser(response.data.userId))\r\n            localStorage.setItem('token', response.data.token)\r\n    }catch(e){\r\n        alert(e)\r\n        localStorage.removeItem('token')\r\n      }\r\n    }\r\n} \r\n\r\n \r\nexport const {saveUser, logoutUser} = userSlice.actions\r\nexport default userSlice.reducer"]},"metadata":{},"sourceType":"module"}