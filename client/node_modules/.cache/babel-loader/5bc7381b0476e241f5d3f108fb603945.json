{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { UPDATE_BOOKS, UPDATE_BOOK_COUNT } from './actions';\nconst initialState = {\n  books: [],\n  currentPage: 1,\n  limit: 4,\n  bookCount: 0,\n  pageCount: 0,\n  gotResponse: false\n};\n\nconst booksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_BOOKS:\n      {\n        return { ...state,\n          books: action.payload\n        };\n      }\n\n    case UPDATE_BOOK_COUNT:\n      {\n        alert('limit: ' + state.limit);\n        const pageCount = Math.ceil(action.payload / state.limit); // alert('page count: ' + pageCount )\n\n        return { ...state,\n          bookCount: action.payload\n        };\n      }\n\n    default:\n      {\n        return {\n          state\n        };\n      }\n  }\n};\n\nexport const postsReducer = combineReducers({\n  books: booksReducer\n});","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/redux/reducers.js"],"names":["combineReducers","UPDATE_BOOKS","UPDATE_BOOK_COUNT","initialState","books","currentPage","limit","bookCount","pageCount","gotResponse","booksReducer","state","action","type","payload","alert","Math","ceil","postsReducer"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,YAAT,EAAuBC,iBAAvB,QAA+C,WAA/C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,WAAW,EAAE,CAFI;AAGjBC,EAAAA,KAAK,EAAE,CAHU;AAIjBC,EAAAA,SAAS,EAAE,CAJM;AAKjBC,EAAAA,SAAS,EAAE,CALM;AAMjBC,EAAAA,WAAW,EAAC;AANK,CAArB;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,YAAL;AAAkB;AACd,eAAO,EAAC,GAAGU,KAAJ;AAAWP,UAAAA,KAAK,EAACQ,MAAM,CAACE;AAAxB,SAAP;AACH;;AACD,SAAKZ,iBAAL;AAAuB;AACnBa,QAAAA,KAAK,CAAC,YAAYJ,KAAK,CAACL,KAAnB,CAAL;AACA,cAAME,SAAS,GAAGQ,IAAI,CAACC,IAAL,CAAUL,MAAM,CAACE,OAAP,GAAiBH,KAAK,CAACL,KAAjC,CAAlB,CAFmB,CAGnB;;AACA,eAAO,EAAC,GAAGK,KAAJ;AAAWJ,UAAAA,SAAS,EAACK,MAAM,CAACE;AAA5B,SAAP;AACH;;AACD;AAAS;AACL,eAAO;AAACH,UAAAA;AAAD,SAAP;AACH;AAZL;AAeH,CAhBD;;AAuBA,OAAO,MAAMO,YAAY,GAAGlB,eAAe,CAAC;AAACI,EAAAA,KAAK,EAAEM;AAAR,CAAD,CAApC","sourcesContent":["import {combineReducers} from 'redux';\r\nimport { UPDATE_BOOKS, UPDATE_BOOK_COUNT} from './actions';\r\n\r\nconst initialState = {\r\n    books: [],\r\n    currentPage: 1,\r\n    limit: 4,\r\n    bookCount: 0,\r\n    pageCount: 0,\r\n    gotResponse:false\r\n}\r\n\r\nconst booksReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case UPDATE_BOOKS:{\r\n            return {...state, books:action.payload}   \r\n        }\r\n        case UPDATE_BOOK_COUNT:{\r\n            alert('limit: ' + state.limit)\r\n            const pageCount = Math.ceil(action.payload / state.limit)\r\n            // alert('page count: ' + pageCount )\r\n            return {...state, bookCount:action.payload}\r\n        }\r\n        default: {\r\n            return {state};\r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const postsReducer = combineReducers({books: booksReducer});"]},"metadata":{},"sourceType":"module"}