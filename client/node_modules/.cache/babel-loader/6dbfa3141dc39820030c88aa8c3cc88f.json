{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\Myproject\\\\client\\\\src\\\\pages\\\\AllBooksPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport BookBox from \"../components/BookBox\";\nimport Row from 'react-bootstrap/Row';\nimport PageItem from 'react-bootstrap/PageItem';\nimport Pagination from 'react-bootstrap/Pagination';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { getBooksThunk, getBookCountThunk, updateCurrentPage } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AllBooksPage = () => {\n  _s();\n\n  const books = useSelector(state => state.books.books);\n  const limit = useSelector(state => state.books.limit);\n  const pageCount = useSelector(state => state.books.pageCount);\n  const currentPage = useSelector(state => state.books.currentPage);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getBookCountThunk());\n  }, []);\n  useEffect(() => {\n    dispatch(getBooksThunk(currentPage, limit));\n  }, [currentPage]);\n\n  const handleChangePage = newPage => {\n    dispatch(updateCurrentPage(newPage));\n  };\n\n  let pages = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push({\n      number: i,\n      ref: `./allbooks?page=${i}`\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 3,\n      className: \"g-4\",\n      children: [books && books.length > 0 && books.map(book => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(BookBox, {\n            book: book\n          }, book._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this);\n      }), pages.map(page => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex ',\n          width: 700,\n          padding: 30,\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          size: \"sm\",\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: page.ref,\n            onClick: () => handleChangePage(page.number),\n            children: /*#__PURE__*/_jsxDEV(Pagination.Item, {\n              children: [page.number, \" \"]\n            }, page.number, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllBooksPage, \"lxGyzroU8qx38VzW4weFZ2xrPGw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = AllBooksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllBooksPage\");","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/pages/AllBooksPage.js"],"names":["React","useEffect","useSelector","useDispatch","Link","BookBox","Row","PageItem","Pagination","getBooksThunk","getBookCountThunk","updateCurrentPage","AllBooksPage","books","state","limit","pageCount","currentPage","dispatch","handleChangePage","newPage","pages","i","push","number","ref","length","map","book","_id","page","display","width","padding","justifyContent"],"mappings":"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","sourcesContent":[" import React, { useEffect} from 'react';\r\nimport {useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookBox from \"../components/BookBox\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport PageItem from 'react-bootstrap/PageItem'\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {getBooksThunk, getBookCountThunk, updateCurrentPage} from '../redux/actions'\r\n\r\nexport const AllBooksPage = () =>{\r\n    const books = useSelector(state => state.books.books);\r\n    const limit = useSelector(state => state.books.limit)\r\n    const pageCount = useSelector(state => state.books.pageCount)\r\n    const currentPage = useSelector(state => state.books.currentPage)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {dispatch(getBookCountThunk())}, [])\r\n    useEffect(() => {dispatch(getBooksThunk(currentPage, limit))}, [currentPage])\r\n    \r\n\r\n    const handleChangePage = (newPage) => {\r\n        dispatch(updateCurrentPage(newPage))\r\n    }\r\n    \r\n    let pages = []\r\n    for(let i = 1; i <= pageCount; i++) {\r\n        pages.push(\r\n            {\r\n                number: i,\r\n                ref: `./allbooks?page=${i}`\r\n            }\r\n        )\r\n    }\r\n      \r\n    return(\r\n    <div className = \"container-fluid\">\r\n         <Row xs={1} md={2} lg={3} className=\"g-4\">\r\n            { books && books.length>0 && books.map(book => {\r\n                   return(\r\n                   <div>\r\n                   <BookBox book = {book} key = {book._id}/> \r\n                   </div>\r\n                   )\r\n             }) }\r\n            {pages.map(page => \r\n          <div style={{ display: 'flex ', width: 700,  padding: 30 ,justifyContent: \"center\" }}>\r\n            <Pagination size = \"sm\" className=\"text-center\"> \r\n                 <Link to={page.ref} onClick={() => handleChangePage(page.number)}>\r\n                     <Pagination.Item  key = {page.number}>{page.number} </Pagination.Item> \r\n                 </Link>\r\n            </Pagination>\r\n            </div>\r\n               )}\r\n         \r\n         </Row>\r\n    \r\n        {/* <div onClick={handleChangePage}>{pages.map(page => <Link to='./allbooks?page=`>{page}</span>)}</div> */}\r\n     \r\n     \r\n    </div>\r\n      \r\n    )   \r\n}"]},"metadata":{},"sourceType":"module"}