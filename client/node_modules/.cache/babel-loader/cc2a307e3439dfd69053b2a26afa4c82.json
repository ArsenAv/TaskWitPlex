{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\Myproject\\\\client\\\\src\\\\pages\\\\Books.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport BookBox from \"../components/BookBox\";\nimport Row from 'react-bootstrap/Row';\nimport Pagination from 'react-bootstrap/Pagination';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Button from 'react-bootstrap/Button';\nimport Img1 from \"../CaruselImg/Img1.jpg\";\nimport Img2 from \"../CaruselImg/Img2.jpg\";\nimport Img3 from \"../CaruselImg/Img3.jpg\";\nimport Modal1 from \"../CaruselImg/Modal1.jpg\";\nimport Modal2 from \"../CaruselImg/Modal2.jpg\";\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ModalBody from 'react-bootstrap/ModalBody';\nimport ModalTitle from 'react-bootstrap/ModalTitle';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport Modal from 'react-bootstrap/Modal';\nimport { getBooksThunk, getBookCountThunk, updateCurrentPage, getSearchBooks } from '../redux/booksSlice';\nimport { users } from \"../redux/userSlice\";\nimport Form from 'react-bootstrap/Form';\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Books = () => {\n  _s();\n\n  const [check, setCheck] = useState(0);\n  const [word, setWord] = useState(\"\");\n  const inputRef = useRef();\n  const checkRef = useRef();\n  const books = useSelector(state => state.books.books);\n  const limit = useSelector(state => state.books.limit);\n  const filtr = useSelector(state => state.books.filtrbooks);\n  const pageCount = useSelector(state => state.books.pageCount);\n  const currentPage = useSelector(state => state.books.currentPage);\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.users.token);\n  useEffect(() => {\n    dispatch(getBookCountThunk(token));\n  }, []);\n  useEffect(() => {\n    dispatch(getBooksThunk(currentPage, limit, token));\n  }, [currentPage]);\n\n  const handleChangePage = newPage => {\n    dispatch(updateCurrentPage(newPage));\n  };\n\n  let pages = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push({\n      number: i,\n      ref: `./books?page=${i}`\n    });\n  }\n\n  const searchHandler = () => {\n    const inputValue = inputRef.current.value;\n    const checkValue = checkRef.current.value;\n    dispatch(getSearchBooks(inputValue, checkValue, token));\n  };\n\n  const values = [true];\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  function handleShow(breakpoint) {\n    setFullscreen(breakpoint);\n    setShow(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid bookscont\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'block',\n        width: \"80%\",\n        padding: 30,\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Carousel, {\n        interval: 2000,\n        children: [/*#__PURE__*/_jsxDEV(Carousel.Item, {\n          style: {\n            'height': \"400px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"d-block w-100\",\n            src: Img1,\n            height: 400,\n            alt: \"First slide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Caption, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n          style: {\n            'height': \"400px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"d-block w-100\",\n            src: Img2,\n            width: 500,\n            height: 400,\n            alt: \"Second slide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Caption, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n          style: {\n            'height': \"400px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"d-block w-100\",\n            src: Img3,\n            width: 500,\n            height: 400,\n            alt: \"Third slide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Caption, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), values.map((v, idx) => /*#__PURE__*/_jsxDEV(Button, {\n        className: \" secondary\",\n        onClick: () => handleShow(v),\n        children: [\"Full screen\", typeof v === 'string' && `below ${v.split('-')[0]}`]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        fullscreen: fullscreen,\n        onHide: () => setShow(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Vzgo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Xcho\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Pslinq\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ananasik\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"xot Levon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid bookfiltr\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchform\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          ref: inputRef,\n          type: \"text\",\n          value: word,\n          onChange: e => setWord(e.target.value),\n          className: \"mb-2 searchinput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        className: \"searchbtn\",\n        onClick: searchHandler,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: checkRef,\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            id: \"inlineCheckbox1\",\n            onChange: e => setCheck(e.target.value),\n            value: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"A-Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: checkRef,\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            id: \"inlineCheckbox2\",\n            onChange: e => setCheck(e.target.value),\n            value: -1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Z-A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid bookbox\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 3,\n        className: \"g-4\",\n        children: books && books.length > 0 && books.map(book => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(BookBox, {\n              book: book\n            }, book._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"50px\"\n      },\n      children: pages.map(page => /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \" pagination-sm paginate\",\n        children: /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          className: \"page-item\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: page.ref,\n            className: \"page-link\",\n            onClick: () => handleChangePage(page.number),\n            children: page.number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Books, \"+hAqNkzt0R1Q1E9FuZtITFyluCg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/pages/Books.js"],"names":["React","useState","useRef","useEffect","useSelector","useDispatch","useStore","Link","BookBox","Row","Pagination","Carousel","Button","Img1","Img2","Img3","Modal1","Modal2","Image","Col","Container","ModalBody","ModalTitle","ModalHeader","Modal","getBooksThunk","getBookCountThunk","updateCurrentPage","getSearchBooks","users","Form","Books","check","setCheck","word","setWord","inputRef","checkRef","books","state","limit","filtr","filtrbooks","pageCount","currentPage","dispatch","token","handleChangePage","newPage","pages","i","push","number","ref","searchHandler","inputValue","current","value","checkValue","values","fullscreen","setFullscreen","show","setShow","handleShow","breakpoint","display","width","padding","margin","map","v","idx","split","e","target","length","book","_id","justifyContent","marginTop","page"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookBox from \"../components/BookBox\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Img1 from \"../CaruselImg/Img1.jpg\"\r\nimport Img2 from \"../CaruselImg/Img2.jpg\"\r\nimport Img3 from \"../CaruselImg/Img3.jpg\"\r\nimport Modal1 from \"../CaruselImg/Modal1.jpg\"\r\nimport Modal2 from \"../CaruselImg/Modal2.jpg\"\r\nimport Image from 'react-bootstrap/Image'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport ModalBody from 'react-bootstrap/ModalBody'\r\nimport ModalTitle from 'react-bootstrap/ModalTitle'\r\nimport ModalHeader from 'react-bootstrap/ModalHeader'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { getBooksThunk, getBookCountThunk, updateCurrentPage, getSearchBooks } from '../redux/booksSlice'\r\nimport {users} from \"../redux/userSlice\"\r\nimport Form from 'react-bootstrap/Form'\r\nimport \"../index.css\"\r\n\r\nexport const Books = () =>{\r\n    const [check,setCheck] = useState(0)\r\n    const [word,setWord] = useState(\"\")\r\n    const inputRef = useRef()\r\n    const checkRef = useRef()\r\n    const books = useSelector(state => state.books.books);\r\n    const limit = useSelector(state => state.books.limit)\r\n    const filtr = useSelector(state => state.books.filtrbooks)\r\n    const pageCount = useSelector(state => state.books.pageCount)\r\n    const currentPage = useSelector(state => state.books.currentPage)\r\n    const dispatch = useDispatch();\r\n    const token = useSelector(state => state.users.token)\r\n    useEffect(() => { dispatch(getBookCountThunk(token)) }, [])\r\n    useEffect(() => { dispatch(getBooksThunk(currentPage, limit,token)) }, [currentPage])\r\n    \r\n    const handleChangePage = (newPage) => {\r\n        dispatch(updateCurrentPage(newPage))\r\n    }\r\n    \r\n    let pages = []\r\n    for(let i = 1; i <= pageCount; i++) {\r\n        pages.push(\r\n            {\r\n                number: i,\r\n                ref: `./books?page=${i}`\r\n            }\r\n        )\r\n    }\r\n   \r\n    const searchHandler = () => {\r\n        const inputValue =  inputRef.current.value\r\n        const checkValue = checkRef.current.value\r\n         dispatch(getSearchBooks(inputValue,checkValue,token))\r\n        \r\n        \r\n    }\r\n    const values = [true];\r\n    const [fullscreen, setFullscreen] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n  \r\n    function handleShow(breakpoint) {\r\n      setFullscreen(breakpoint);\r\n      setShow(true);\r\n    }\r\n    \r\n\r\n    \r\n    return(\r\n        <div className = \"container-fluid bookscont\">\r\n             <div style={{ display: 'block', width: \"80%\", padding: 30 , margin: \"0 auto\"}}>\r\n                <Carousel interval={2000}>\r\n                <Carousel.Item style={{'height':\"400px\"}}>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src= {Img1}\r\n                    \r\n                    height = {400}\r\n                    alt=\"First slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                   \r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item style={{'height':\"400px\"}}>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src={Img2}\r\n                    width = {500}\r\n                    height = {400}\r\n                    alt=\"Second slide\"\r\n                    />\r\n\r\n                    <Carousel.Caption>\r\n                  \r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item style={{'height':\"400px\"}}>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src= {Img3}\r\n                    width = {500}\r\n                    height = {400}\r\n                    alt=\"Third slide\"\r\n                    />\r\n\r\n                    <Carousel.Caption>\r\n                \r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                </Carousel>\r\n                   {values.map((v, idx) => (\r\n                            <Button key={idx} className=\" secondary\" onClick={() => handleShow(v)}>\r\n                            Full screen\r\n                            {typeof v === 'string' && `below ${v.split('-')[0]}`}\r\n                            </Button>\r\n                        ))}\r\n                        <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\r\n                                    <Modal.Header closeButton>\r\n                                    <Modal.Title>Modal</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                           <ul>\r\n                                               <li>Vzgo</li>\r\n                                               <li>Xcho</li>\r\n                                               <li>Pslinq</li>\r\n                                               <li>Ananasik</li>\r\n                                               <li>xot Levon</li>\r\n                                           </ul>\r\n                                    </Modal.Body>\r\n                        </Modal>\r\n                </div>\r\n                <div className = \"container-fluid bookfiltr\">\r\n                <div className = \"searchform\">\r\n                <Form.Control ref = {inputRef} type =\"text\" value ={word} onChange = {e => setWord(e.target.value)} className =\"mb-2 searchinput\"/>\r\n                \r\n                </div>\r\n                <Button variant=\"outline-secondary\"  className = \"searchbtn\" onClick = {searchHandler}>\r\n                        Search\r\n                </Button>\r\n                <div>\r\n                    \r\n                    <div className = \"form-check form-check-inline\">\r\n                            <input ref = {checkRef} className =\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\"  onChange ={ e => setCheck(e.target.value)} value={1}/>\r\n                            <label className =\"form-check-label\" >A-Z</label>\r\n                     </div>\r\n                            <div className =\"form-check form-check-inline\">\r\n                            <input ref = {checkRef}  className =\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\"  onChange ={e=> setCheck(e.target.value)} value={-1}/>\r\n                            <label className =\"form-check-label\" >Z-A</label>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n             <div className = \"container-fluid bookbox\">\r\n            <Row xs={1} md={2} lg={3} className=\"g-4\">\r\n                { books && books.length > 0 && books.map(book => {\r\n                    return(\r\n                            <div>\r\n                                <BookBox book = {book} key = {book._id}/> \r\n                            </div>\r\n                    )\r\n                }) }\r\n            </Row>\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"50px\" }}>\r\n                {pages.map(page => \r\n                    <Pagination className=\" pagination-sm paginate\"> \r\n                        <Pagination.Item className = \"page-item\">\r\n                            <Link to={page.ref} className=\"page-link\" onClick={() => handleChangePage(page.number)}>\r\n                        {page.number}\r\n                        </Link> </Pagination.Item> \r\n                    </Pagination>\r\n                \r\n                )}\r\n            </div>\r\n        </div>\r\n    )   \r\n}"]},"metadata":{},"sourceType":"module"}