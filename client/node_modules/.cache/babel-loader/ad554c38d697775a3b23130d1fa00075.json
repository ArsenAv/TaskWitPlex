{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\Myproject\\\\client\\\\src\\\\pages\\\\AllBooksPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport BookBox from \"../components/BookBox\";\nimport Row from 'react-bootstrap/Row';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { getBooksThunk, getBookCountThunk, updateCurrentPage } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AllBooksPage = () => {\n  _s();\n\n  const books = useSelector(state => state.books.books);\n  const limit = useSelector(state => state.books.limit);\n  const pageCount = useSelector(state => state.books.pageCount);\n  const currentPage = useSelector(state => state.books.currentPage);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getBookCountThunk());\n  }, []);\n  useEffect(() => {\n    dispatch(getBooksThunk(currentPage, limit));\n  }, [currentPage]);\n\n  const handleChangePage = newPage => {\n    dispatch(updateCurrentPage(newPage));\n  };\n\n  let pages = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push({\n      number: i,\n      ref: `./allbooks?page=${i}`\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 3,\n      className: \"g-4\",\n      children: [books && books.length > 0 && books.map(book => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BookBox, {\n            book: book\n          }, book._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/book/$book\",\n            className: \"btn btn-primary\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }, this);\n      }), pages.map(page => /*#__PURE__*/_jsxDEV(Link, {\n        to: page.ref,\n        onClick: () => handleChangePage(page.number),\n        children: page.number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 32\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllBooksPage, \"lxGyzroU8qx38VzW4weFZ2xrPGw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = AllBooksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllBooksPage\");","map":{"version":3,"sources":["C:/Users/Arsen/Documents/Myproject/client/src/pages/AllBooksPage.js"],"names":["React","useEffect","useSelector","useDispatch","Link","BookBox","Row","getBooksThunk","getBookCountThunk","updateCurrentPage","AllBooksPage","books","state","limit","pageCount","currentPage","dispatch","handleChangePage","newPage","pages","i","push","number","ref","length","map","book","_id","page"],"mappings":"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","sourcesContent":[" import React, { useEffect} from 'react';\r\nimport {useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookBox from \"../components/BookBox\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {getBooksThunk, getBookCountThunk, updateCurrentPage} from '../redux/actions'\r\n\r\nexport const AllBooksPage = () =>{\r\n    const books = useSelector(state => state.books.books);\r\n    const limit = useSelector(state => state.books.limit)\r\n    const pageCount = useSelector(state => state.books.pageCount)\r\n    const currentPage = useSelector(state => state.books.currentPage)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {dispatch(getBookCountThunk())}, [])\r\n    useEffect(() => {dispatch(getBooksThunk(currentPage, limit))}, [currentPage])\r\n    \r\n\r\n    const handleChangePage = (newPage) => {\r\n        dispatch(updateCurrentPage(newPage))\r\n    }\r\n    \r\n    let pages = []\r\n    for(let i = 1; i <= pageCount; i++) {\r\n        pages.push(\r\n            {\r\n                number: i,\r\n                ref: `./allbooks?page=${i}`\r\n            }\r\n        )\r\n    }\r\n      \r\n    return(\r\n    <div className = \"container-fluid\">\r\n         <Row xs={1} md={2} lg={3} className=\"g-4\">\r\n            { books && books.length>0 && books.map(book => {\r\n                   return(\r\n                   <div>\r\n                   <BookBox book = {book} key = {book._id}/> \r\n                   <Link to=\"/book/$book\"  className=\"btn btn-primary\">Sign up</Link>\r\n                   </div>\r\n                   )\r\n             }) }\r\n            {pages.map(page => <Link to={page.ref} onClick={() => handleChangePage(page.number)}>{page.number}</Link>)}\r\n         \r\n         </Row>\r\n    \r\n        {/* <div onClick={handleChangePage}>{pages.map(page => <Link to='./allbooks?page=`>{page}</span>)}</div> */}\r\n     \r\n     \r\n    </div>\r\n      \r\n    )   \r\n}"]},"metadata":{},"sourceType":"module"}